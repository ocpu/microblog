# my global config
global:
  scrape_interval:     30s # Set the scrape interval to every 30 seconds. Default is every 1 minute.
  evaluation_interval: 30s # Evaluate rules every 30 seconds. The default is every 1 minute.
  # scrape_timeout is set to the global default (10s).

# Alertmanager configuration
alerting:
  alertmanagers:
  - static_configs:
    - targets:
      # - alertmanager:9093

# Load rules once and periodically evaluate them according to the global 'evaluation_interval'.
rule_files:
  # - "first_rules.yml"
  # - "second_rules.yml"

# A scrape configuration containing exactly one endpoint to scrape:
# Here it's Prometheus itself.
scrape_configs:


  - job_name: 'prometheus'

    # metrics_path defaults to '/metrics'
    # scheme defaults to 'http'.

    static_configs:
      - targets:
{% for ip in groups["appServer"] %}
          - {{ ip }}:9100
{% endfor %}
        labels:
          groups: app servers
      - targets:
{% for ip in groups["loadBalancer"] %}
          - {{ ip }}:9100
{% endfor %}
        labels:
          groups: load balancers
      - targets:
{% for ip in groups["database"] %}
          - {{ ip }}:9100
{% endfor %}
        labels:
          groups: databases
      - targets:
{% for ip in groups["monitoring"] %}
          - {{ ip }}:9100
{% endfor %}
        labels:
          groups: monitorings



  - job_name: 'database'
    static_configs:
      - targets:
{% for ip in groups["database"] %}
          - {{ ip }}:9104
{% endfor %}



  - job_name: 'load-balancer'
    scrape_interval: 1m
    metrics_path: '/prometheus'
    static_configs:
      - targets: 
{% for ip in groups["loadBalancer"] %}
          - {{ ip }}:9113
{% endfor %}



  - job_name: 'app-server'
    static_configs:
      - targets: 
{% for ip in groups["appServer"] %}
          - {{ ip }}:9102
{% endfor %}
